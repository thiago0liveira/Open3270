#region License
/* 
 *
 * Open3270 - A C# implementation of the TN3270/TN3270E protocol
 *
 * Copyright (c) 2004-2020 Michael Warriner
 * Modifications (c) as per Git change history
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software
 * and associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial 
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
 * LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
 
#endregion
using System;

namespace Open3270
{
	/// <summary>
	/// An exception occured navigating between two screens. TNRouteException can be generated by
	/// any code that is performing automatic navigation if a failure occurs.
	/// </summary>
	public class TNRouteException : Exception
	{
		private string mFrom;
		private string mTo;
		private string mText;
		/// <summary>
		/// Constructor for a routing exception. 
		/// </summary>
		/// <param name="from">Screen we are currently on</param>
		/// <param name="to">Scren we tried to move to</param>
		/// <param name="text">Error that occured when moving from 'from' to 'to'</param>
		/// <remarks>You can throw a routing exception in your client command handler if
		/// you what to indicate a routing error from your code.</remarks>
		public TNRouteException(string from, string to, string text)
		{
			mFrom = from;
			mTo	  = to;
			mText = text;
		}
		/// <summary>
		/// Displays a textual representation of the routing exception.
		/// </summary>
		/// <returns>The error string</returns>
		public override string ToString()
		{
			return "TNRouteException from screen '"+mFrom+"' to '"+mTo+"'. "+mText+".";
		}
	}
}